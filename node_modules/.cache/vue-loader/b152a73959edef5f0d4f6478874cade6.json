{"remainingRequest":"C:\\Users\\Usuario\\Desktop\\web_celadores2\\nuevo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Usuario\\Desktop\\web_celadores2\\nuevo\\src\\Jefe.vue?vue&type=style&index=0&id=535a209a&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\Usuario\\Desktop\\web_celadores2\\nuevo\\src\\Jefe.vue","mtime":1746030846924},{"path":"C:\\Users\\Usuario\\Desktop\\web_celadores2\\nuevo\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745226309000},{"path":"C:\\Users\\Usuario\\Desktop\\web_celadores2\\nuevo\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1745227110000},{"path":"C:\\Users\\Usuario\\Desktop\\web_celadores2\\nuevo\\node_modules\\postcss-loader\\src\\index.js","mtime":1745226852000},{"path":"C:\\Users\\Usuario\\Desktop\\web_celadores2\\nuevo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745225969000},{"path":"C:\\Users\\Usuario\\Desktop\\web_celadores2\\nuevo\\node_modules\\vue-loader\\lib\\index.js","mtime":1745227110000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiBFc3TDqXRpY2EgeSB0cmFuc2ljaW9uZXMgeWEgaW5jbHVpZGFzIHBvciBUYWlsd2luZCAqLw0K"},{"version":3,"sources":["Jefe.vue"],"names":[],"mappings":";AAmMA","file":"Jefe.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-white via-slate-100 to-blue-50 p-6\">\r\n\r\n    <!-- 🔘 Botón de cerrar sesión -->\r\n    <div class=\"flex justify-end mb-4\">\r\n      <button @click=\"cerrarSesion\"\r\n              class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium px-4 py-2 rounded-md transition\">\r\n        Cerrar sesión\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 🔳 Grid de columnas -->\r\n    <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n\r\n      <!-- Pendientes -->\r\n      <section>\r\n        <h3 class=\"text-lg font-semibold text-blue-800 mb-3 text-center\">Pendientes</h3>\r\n        <div v-if=\"pendientes.length > 0\" class=\"space-y-3\">\r\n          <div v-for=\"traslado in pendientes\" :key=\"traslado.id\"\r\n              :class=\"['bg-white p-4 rounded-lg border-2 shadow cursor-pointer transition hover:shadow-md', getPriorityBorderClass(traslado.prioridad)]\"\r\n              @click=\"toggleExpand(traslado)\">\r\n            <p><strong>Ubicación:</strong> {{ traslado.ubicacion }}</p>\r\n            <p><strong>Destino:</strong> {{ traslado.destino }}</p>\r\n            <p><strong>Celador:</strong> {{ traslado.celador_id || 'Sin asignar' }}</p>\r\n            <p>\r\n              <strong>Prioridad:</strong>\r\n              <span :class=\"getPriorityColorClass(traslado.prioridad)\" class=\"inline-block rounded w-10 h-3 ml-2\"></span>\r\n            </p>\r\n\r\n            <div v-if=\"traslado.expandido\" class=\"mt-2 text-sm text-gray-700 space-y-1\">\r\n              <p><strong>Motivo:</strong> {{ traslado.motivo }}</p>\r\n              <p><strong>Condiciones:</strong>\r\n                {{ traslado.condiciones && traslado.condiciones.length > 0 ? traslado.condiciones.join(', ') : 'Ninguna' }}\r\n              </p>\r\n              <p><strong>Aislamiento:</strong> {{ traslado.aislamiento }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p v-else class=\"text-center text-gray-500\">Sin traslados</p>\r\n      </section>\r\n\r\n      <!-- En Curso -->\r\n      <section>\r\n        <h3 class=\"text-lg font-semibold text-blue-800 mb-3 text-center\">En Curso</h3>\r\n        <div v-if=\"aceptados.length > 0\" class=\"space-y-3\">\r\n          <div v-for=\"traslado in aceptados\" :key=\"traslado.id\"\r\n               :class=\"['bg-white p-4 rounded-lg border-2 shadow cursor-pointer transition hover:shadow-md', getPriorityBorderClass(traslado.prioridad)]\"\r\n                @click=\"toggleExpand(traslado)\">\r\n            <p><strong>Ubicación:</strong> {{ traslado.ubicacion }}</p>\r\n            <p><strong>Destino:</strong> {{ traslado.destino }}</p>\r\n            <p><strong>Celador:</strong> {{ traslado.celador_id || 'Sin asignar' }}</p>\r\n            <p>\r\n                <strong>Prioridad:</strong>\r\n                <span :class=\"getPriorityColorClass(traslado.prioridad)\" class=\"inline-block rounded w-10 h-3 ml-2\"></span>\r\n              </p>\r\n\r\n            <div v-if=\"traslado.expandido\" class=\"mt-2 text-sm text-gray-700 space-y-1\">\r\n              <p><strong>Motivo:</strong> {{ traslado.motivo }}</p>\r\n              <p><strong>Condiciones:</strong>\r\n                {{ traslado.condiciones && traslado.condiciones.length > 0 ? traslado.condiciones.join(', ') : 'Ninguna' }}\r\n              </p>\r\n              <p><strong>Aislamiento:</strong> {{ traslado.aislamiento }}</p>\r\n          \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p v-else class=\"text-center text-gray-500\">Sin traslados</p>\r\n      </section>\r\n\r\n      <!-- Finalizados -->\r\n      <section>\r\n        <h3 class=\"text-lg font-semibold text-blue-800 mb-3 text-center\">Finalizados</h3>\r\n        <div v-if=\"finalizados.length > 0\" class=\"space-y-3\">\r\n          <div v-for=\"traslado in finalizados\" :key=\"traslado.id\"\r\n               :class=\"['bg-white p-4 rounded-lg border-2 shadow cursor-pointer transition hover:shadow-md', getPriorityBorderClass(traslado.prioridad)]\"\r\n               @click=\"toggleExpand(traslado)\">\r\n            <p><strong>Ubicación:</strong> {{ traslado.ubicacion }}</p>\r\n            <p><strong>Destino:</strong> {{ traslado.destino }}</p>\r\n            <p><strong>Celador:</strong> {{ traslado.celador_id || 'Sin asignar' }}</p>\r\n            <p>\r\n                <strong>Prioridad:</strong>\r\n                <span :class=\"getPriorityColorClass(traslado.prioridad)\" class=\"inline-block rounded w-10 h-3 ml-2\"></span>\r\n              </p>\r\n\r\n            <div v-if=\"traslado.expandido\" class=\"mt-2 text-sm text-gray-700 space-y-1\">\r\n              <p><strong>Motivo:</strong> {{ traslado.motivo }}</p>\r\n              <p><strong>Condiciones:</strong>\r\n                {{ traslado.condiciones && traslado.condiciones.length > 0 ? traslado.condiciones.join(', ') : 'Ninguna' }}\r\n              </p>\r\n              <p><strong>Aislamiento:</strong> {{ traslado.aislamiento }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p v-else class=\"text-center text-gray-500\">Sin traslados</p>\r\n      </section>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      pendientes: [],\r\n      aceptados: [],\r\n      finalizados: [],\r\n      socket: null,\r\n      jefeId: \"JEFE_1\"\r\n    };\r\n  },\r\n  mounted() {\r\n    this.conectarWebSocket();\r\n    this.cargarTraslados();\r\n  },\r\n  methods: {\r\n    conectarWebSocket() {\r\n      this.socket = new WebSocket(\"ws://localhost:3000\");\r\n\r\n      this.socket.onopen = () => {\r\n        console.log(\"WebSocket conectado como jefe\");\r\n        this.socket.send(JSON.stringify({ type: \"register_jefe\", id: this.jefeId }));\r\n      };\r\n\r\n      this.socket.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        if (data.type === \"actualizar_traslados\") this.cargarTraslados();\r\n      };\r\n\r\n      this.socket.onclose = () => {\r\n        console.log(\"WebSocket cerrado, reconectando en 2s...\");\r\n        setTimeout(this.conectarWebSocket, 2000);\r\n      };\r\n\r\n      this.socket.onerror = (error) => {\r\n        console.error(\"Error en WebSocket:\", error);\r\n        this.socket.close();\r\n      };\r\n    },\r\n    cargarTraslados() {\r\n      fetch(\"http://localhost:3000/traslados/pendientes\")\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.pendientes = data.map(t => ({ ...t, expandido: false }));\r\n        });\r\n\r\n      fetch(\"http://localhost:3000/traslados/aceptados\")\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.aceptados = data.map(t => ({ ...t, expandido: false }));\r\n        });\r\n\r\n      fetch(\"http://localhost:3000/traslados/finalizados\")\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.finalizados = data.map(t => ({ ...t, expandido: false }));\r\n        });\r\n    },\r\n    toggleExpand(traslado) {\r\n      traslado.expandido = !traslado.expandido;\r\n    },\r\n    cerrarSesion() {\r\n      if (this.socket) this.socket.close();\r\n      this.$router.push(\"/\");\r\n    },\r\n    getPriorityColorClass(prioridad) {\r\n      switch (prioridad) {\r\n        case 'Alta':\r\n          return 'bg-red-500';\r\n        case 'Media':\r\n          return 'bg-yellow-500';\r\n        case 'Baja':\r\n          return 'bg-green-500';\r\n        default:\r\n          return 'bg-gray-500';\r\n      }\r\n    },\r\n\r\n    getPriorityBorderClass(prioridad) {\r\n      switch (prioridad) {\r\n        case 'Alta':\r\n          return 'border-red-500';\r\n        case 'Media':\r\n          return 'border-yellow-500';\r\n        case 'Baja':\r\n          return 'border-green-500';\r\n        default:\r\n          return 'border-gray-300';\r\n      }\r\n    }\r\n  }\r\n  \r\n</script>\r\n\r\n<style scoped>\r\n/* Estética y transiciones ya incluidas por Tailwind */\r\n</style>\r\n"]}]}